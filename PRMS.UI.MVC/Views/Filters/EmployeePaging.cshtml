@* We updated the model to use paged list instead of IEnumerable. This change is necessary so that we can benefit from
    functionality built into the PagedList collection type.*@
@model PagedList.IPagedList<PRMS.DATA.EF.Employee>
@using PagedList.Mvc

<div class="container col-md-12 mt-5">
    @{
        ViewBag.Title = "Employees";
    }
    <div class="container d-flex justify-content-center">
        <div class="row">
            <div class="col-md-6 d-flex justify-content-center">
                <h2>@ViewBag.Title</h2>

                @* Below is the search box functionality *@

            </div>
        </div>
        <div class="col-md-6 d-flex justify-content-center">
            @using (Html.BeginForm("EmployeePaging", "Filters", FormMethod.Get))
            {
                <p>
                    Find by Name: @Html.TextBox("SearchString", ViewBag.SearchString as string)
                    <input type="submit" value="search" />
                </p>
            }
        </div>

        <div class="col-md-3 d-flex justify-content-center">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @*
        The code above displays the current page of X number of records (Page Count). We use the tierney operator above in the event
        that no records are in the Page Count we wont show "Page 1 of 0"
            *@
            </div>
            <div class="col-md-3 d-flex justify-content-center">
                @Html.PagedListPager(Model, page => Url.Action("EmployeePaging", new { page, searchString = ViewBag.SearchString }))
                @*
            The code above generates the individual page buttons. It uses the strongly typed collection defined on line 3 of this view.
            For each page button, we are creating an Url.Action that goes to the BooksMVCPaging method on the Filters controller. It also passes over the next page number.*@

            </div>
        </div>
    <div class="row">
        <div class="col-md-2">
            <p>
                @Html.ActionLink("Home", "Index", "Home", new { @class = "btn btn-primary btn-sm  fa-solid fa-angles-left" })

            </p>
        </div>
        <div class="col-md-2">
            <p>
                @Html.ActionLink("Create New", "Create", "Employees")
            </p>
        </div>
    </div>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().First_Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Last_Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Badge)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Date_Of_Hire)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Date_of_Termination)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Pay_Rate_Hourly)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Promotion_Date)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.First_Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Last_Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Badge)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date_Of_Hire)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date_of_Termination)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Pay_Rate_Hourly)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Promotion_Date)
                    </td>

                    @*<td>
                        @Html.ActionLink("Edit", "Edit","Employees", new { id = item.EmployeeId }) |
                        @Html.ActionLink("Details", "Details", "Employees", null, new { id = item.EmployeeId }) |
                        @Html.ActionLink("Delete", "Delete", "Employees", new { id = item.EmployeeId })
                    </td>*@
                </tr>
            }

        </table>
    </div>
